@model PreventiveMaintenanceSystem.Models.Entities.SounderCheck

@{
    ViewBag.Title = "SounderCheck";
    List<SelectListItem> TowerList = new List<SelectListItem>();
    TowerList.Add(new SelectListItem
    {
        Text = "One West",
        Value = "One West"
    });
    TowerList.Add(new SelectListItem
    {
        Text = "Two West",
        Value = "Two West"
    });

    List<SelectListItem> StatusType = new List<SelectListItem>();
    StatusType.Add(new SelectListItem
    {
        Text = "Good",
        Value = "true"
    });
    StatusType.Add(new SelectListItem
    {
        Text = "No Good",
        Value = "false"
    });
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="card shadow">
        <div class="card-header">
            <h5 class="font-weight-bold">Inspect Sounder</h5>
        </div>
        <div class="card-body">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Level, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Tower, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @*@Html.EditorFor(model => model.Tower, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.Tower, TowerList, "Select Tower", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Tower, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MCP1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.MCP1, StatusType, "Select Status", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MCP1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MCP2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.MCP2, StatusType, "Select Status", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MCP2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Sounder1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.Sounder1, StatusType, "Select Status", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Sounder1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Sounder2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.Sounder2, StatusType, "Select Status", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Sounder2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" hidden>
                    @Html.LabelFor(model => model.InspectionDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.InspectionDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.InspectionDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Inspector, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Inspector, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Inspector, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-12">
                        <button class="btn btn-primary float-right ml-2"><i class="fa fa-save"></i> Save</button>
                        <a href="/fdas/sounderindex" class="btn btn-secondary float-right"><i class="fa fa-list"></i> Back to List</a>
                    </div>
                </div>
            </div>

        </div>
    </div>
}