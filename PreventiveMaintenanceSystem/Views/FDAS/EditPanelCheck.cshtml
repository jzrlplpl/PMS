@model PreventiveMaintenanceSystem.Models.Entities.PanelCheck

@{
    ViewBag.Title = "Edit Panel";
    List<SelectListItem> panelList = new List<SelectListItem>();
    for (int i = 1; i < 6; i++)
    {
        panelList.Add(new SelectListItem
        {
            Text = i.ToString(),
            Value = i.ToString()
        });
    }
    List<SelectListItem> SoundOutput = new List<SelectListItem>();
    SoundOutput.Add(new SelectListItem
    {
        Text = "On",
        Value = "true"
    });
    SoundOutput.Add(new SelectListItem
    {
        Text = "Off",
        Value = "false"
    });

    List<SelectListItem> BatteryStatus = new List<SelectListItem>();
    BatteryStatus.Add(new SelectListItem
    {
        Text = "Good",
        Value = "true"
    });
    BatteryStatus.Add(new SelectListItem
    {
        Text = "No Good",
        Value = "false"
    });

    List<SelectListItem> TowerList = new List<SelectListItem>();
    TowerList.Add(new SelectListItem
    {
        Text = "One West",
        Value = "One West"
    });
    TowerList.Add(new SelectListItem
    {
        Text = "Two West",
        Value = "Two West"
    });
}
@section Styles
{
    <style>
        #panel-add {
            margin-top: 55px;
        }

        .bootstrap-tagsinput {
            width: 100% !important;
        }

        .dropdown-menu, span.twitter-typeahead .tt-menu {
            position: absolute;
            top: 100%;
            left: 0;
            z-index: 1000;
            display: none;
            float: left;
            min-width: 160px;
            padding: 10px;
            margin: 5px;
            font-size: 1rem;
            color: #373a3c;
            text-align: left;
            list-style: none;
            background-color: #fff;
            background-clip: padding-box;
            border: 1px solid rgba(0, 0, 0, 0.15);
            border-radius: 0.25rem;
        }

        span.twitter-typeahead .tt-menu {
            cursor: pointer;
        }

        *, *::before, *::after {
            -webkit-box-sizing: border-box;
            box-sizing: border-box;
        }
    </style>
}
<link href="~/Content/checkerview.css" rel="stylesheet" />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container" id="panel-edit">
        @Html.AntiForgeryToken()
        <h3 class="font-weight-bold">Edit Panel</h3>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.DropDownListFor(model => model.Number, panelList, "Select Panel #", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tower, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @*@Html.EditorFor(model => model.Tower, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.Tower, TowerList, "Select Tower", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Tower, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SounderOutput, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-12">
                @Html.DropDownListFor(model => model.SounderOutput, SoundOutput, "Select Sounder Output", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SounderOutput, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BatteryConnector, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.DropDownListFor(model => model.BatteryConnector, BatteryStatus, "Select Battery Condition", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BatteryConnector, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BatteryVoltage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.BatteryVoltage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BatteryVoltage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" hidden>
            @Html.LabelFor(model => model.InspectionDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.InspectionDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InspectionDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <label>Inspector:</label>
                <input type="text" class="form-control" data-role="tagsinput" name="txtInspector" id="txtInspector" value="" readonly disabled />
                @Html.ValidationMessageFor(model => model.Inspector, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <button type="submit" class="btn btn-primary"><i class="fa fa-save"></i> Save</button>
                <a href="/fdas/panelindex" class="btn btn-warning"><i class="fa fa-list"></i> Back to List</a>
            </div>
        </div>
    </div>

}
@section Scripts{
    @*<script src="~/Scripts/typeahead-inspector.js"></script>*@
    <script>
        $("#txtInspector").val("@Model.Inspector");
        //$('#txtInspector').tagsinput({
        //    'interactive': true
        //});
    </script>

}