@model PreventiveMaintenanceSystem.Models.Entities.SounderCheck
@using Newtonsoft.Json
@{
    ViewBag.Title = "Inspect One West";
    List<SelectListItem> Status = new List<SelectListItem>();
    Status.Add(new SelectListItem
    {
        Text = "Good",
        Value = "true"
    });
    Status.Add(new SelectListItem
    {
        Text = "No Good",
        Value = "false"
    });

    var json = JsonConvert.SerializeObject(Model);
}

<h2>One West</h2>

@using (Html.BeginForm("OneWest", "FDAS", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <table class="table">
        @foreach (var item in ViewBag.FloorList)
        {
            <thead>
                <tr>
                    <th>Level</th>
                    <th>MCP1</th>
                    <th>MCP2</th>
                    <th>Sounder1</th>
                    <th>Sounder2</th>
                    <th>Inspector</th>
                    <th>Remarks</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td hidden>
                        <input type="hidden" class="form-control" name="Tower" id="Tower" value="One West">
                    </td>
                    <td>
                        <input type="text" class="form-control" name="Level" id="Level" value="@item" readonly>
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.MCP1, Status, "Select Status", new { @class = "form-control" })
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.MCP2, Status, "Select Status", new { @class = "form-control" })
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.Sounder1, Status, "Select Status", new { @class = "form-control" })
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.Sounder2, Status, "Select Status", new { @class = "form-control" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.Inspector, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>
                        @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control" })
                    </td>
                </tr>
            </tbody>


        }
    </table>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="save" value="Save" class="btn btn-default" />
        </div>
    </div>
}
@section Scripts
{
    <script src="~/Content/add-record.js"></script>
}
@*<div class="form-horizontal">
        <h4>SounderCheck</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Level, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tower, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tower, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tower, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MCP1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.MCP1)
                    @Html.ValidationMessageFor(model => model.MCP1, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MCP2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.MCP2)
                    @Html.ValidationMessageFor(model => model.MCP2, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sounder1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Sounder1)
                    @Html.ValidationMessageFor(model => model.Sounder1, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sounder2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Sounder2)
                    @Html.ValidationMessageFor(model => model.Sounder2, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InspectionDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InspectionDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InspectionDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Inspector, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Inspector, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Inspector, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>*@
