@model PreventiveMaintenanceSystem.Models.Entities.SounderCheck

@{
    ViewBag.Title = "Edit Sounder";
    List<SelectListItem> Status = new List<SelectListItem>();
    Status.Add(new SelectListItem
    {
        Text = "Select Status",
        Value = "true"
    });
    Status.Add(new SelectListItem
    {
        Text = "Good",
        Value = "true"
    });
    Status.Add(new SelectListItem
    {
        Text = "No Good",
        Value = "false"
    });
}

<h2>EditSounderCheck</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container" id="panel-edit">
        @Html.AntiForgeryToken()
        <h3 class="font-weight-bold">Edit Sounder</h3>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Tower, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Tower, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Tower, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @*@Html.EditorFor(model => model.Tower, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.EditorFor(model => model.Level, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MCP1, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-12">
                @Html.DropDownListFor(model => model.MCP1, Status, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MCP1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MCP2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.DropDownListFor(model => model.MCP2, Status, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MCP2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sounder1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.DropDownListFor(model => model.Sounder1, Status, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Sounder1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sounder2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.DropDownListFor(model => model.Sounder2, Status, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Sounder2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InspectionDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @*@Html.TextAreaFor(model => model.InspectionDate, new { htmlAttributes = new { @class = "form-control" } })*@
                <input type="text" class="form-control" name="InspectionDate" id="InspectionDate" value="@Model.InspectionDate.ToString("MM/dd/yyyy")" readonly />
                @Html.ValidationMessageFor(model => model.InspectionDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <label>Inspector:</label>
                <input type="text" class="form-control" data-role="tagsinput" name="txtInspector" id="txtInspector" value="" readonly disabled />
                @Html.ValidationMessageFor(model => model.Inspector, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <button type="submit" class="btn btn-primary"><i class="fa fa-save"></i> Save</button>
                <a href="/fdas/sounderindex" class="btn btn-warning"><i class="fa fa-list"></i> Back to List</a>
            </div>
        </div>
    </div>

}
@section Scripts{
    <script>
        $("#txtInspector").val("@Model.Inspector");
    </script>
}
